#!/bin/bash

set -e

source script/setup-env $@

echo -e "ðŸ§ª ${BLUE}running unit tests...${OFF}"

if [[ "$CI" == "true" ]]; then
  source script/ci-env
fi

os="unknown"
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  os="linux"
elif [[ "$OSTYPE" == "darwin"* ]]; then
  os="mac"
fi

skip_coverage=false
for arg in "$@"; do
  if [ "$arg" == "-s" ]; then
    skip_coverage=true
    break
  fi
done

# if -s was supplied as an argument, skip coverage reports (they can be slow)
if $skip_coverage; then
  crystal spec
elif [ "$os" == "mac" ]; then
  # on mac, code coverage isn't working for a reason I couldn't fix
  crystal spec
# if the kcov binary cannot be found, warn and run specs without coverage
elif [ ! -f "$DIR/bin/kcov" ]; then
  echo "WARN: the kcov binary cannot be found at $DIR/bin/kcov - no code coverage report will be generated"
  crystal spec
# otherwise, run specs with coverage
else
  $DIR/bin/crkcov --cleanup-coverage-before --coverage-dir $DIR/coverage --kcov-executable $DIR/bin/kcov --output --kcov-args="--exclude-region=nocov-start:nocov-end"
fi

echo -e "âœ… ${GREEN}tests complete!${OFF}"
